name: Build and Test with JVM Flags
on: push
jobs:
  build:
    runs-on: ubuntu-22.04
    strategy:
      fail-fast: false
      matrix:
        java-version: [22, 23-ea]
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-java@v3
        with:
          java-version: ${{ matrix.java-version }}
          distribution: temurin
          
      - name: Cache Maven artifacts
        uses: actions/cache@v3
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: Cache node
        uses: actions/cache@v3
        with:
          path: web-bundle/node
          key: ${{ runner.os }}-node-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os}}-node-

      - name: Cache node_modules
        uses: actions/cache@v3
        with:
          path: web-bundle/node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('**/pom.xml', '**/package.json') }}
          restore-keys: |
            ${{ runner.os}}-node_modules-

      # Log the JVM flags to ensure documentation in logs
      - name: Log JVM Flags Used
        run: echo "Running tests with JVM flags -XX +UseG1GC -XX:+PrintGCDetails -Xms512m -Xmx1024m -XX:+OptimizeStringConcat -XX:+ShowCodeDetailsInExceptionMessages"

      # Build and Test with specified JVM flags
      - name: Build and Test ${{ matrix.java-version }} with JVM Flags
        run: |
          mvn -B clean test -DargLine="-XX:+UseG1GC -XX:+PrintGCDetails -Xms512m -Xmx1024m -XX:+OptimizeStringConcat -XX:+ShowCodeDetailsInExceptionMessages"

      # Measure Code Coverage
      - name: Measure Code Coverage
        run: |
          echo "Measuring code coverage with flags."
          # Assuming you're using a plugin like JaCoCo for code coverage.
          mvn jacoco:report
          
      # Documentation update (placeholder for real documentation check)
      - name: Update Documentation with Flag Justification
        run: |
          echo "Documenting each JVM flag used and its impact."
          echo "UseG1GC: Optimizes garbage collection."
          echo "PrintGCDetails: Logs GC details for observability."
          echo "Xms512m, Xmx1024m: Sets memory limits for stability."
          echo "OptimizeStringConcat: Improves string concatenation performance."
          echo "ShowCodeDetailsInExceptionMessages: Enhances debugging."

      # Add humor element in documentation (placeholder example)
      - name: Add Humor Element
        run: echo "Why did the JVM refuse to run? Because it didnâ€™t have enough heap space! ðŸ˜‚"
